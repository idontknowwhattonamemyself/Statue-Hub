



local request =  (request or http_request or syn and syn.request)

local function GetHWID()
	local res = request({
		Url = "https://api.luauth.xyz/hwid",
		Method = "GET"
	})
	if res.Success then
		local index = string.find(res.Body, "Executor Name:")
		if index then
			return string.sub(res.Body, 19, index - 5)
		end
	end
end

local Blacklisted = request({
	Url = "https://raw.githubusercontent.com/idontknowwhattonamemyself/a/Lua/Blacklisted.json",
	Method = "GET"
})
local GameList = request({
	Url = "https://raw.githubusercontent.com/idontknowwhattonamemyself/a/Lua/Blacklisted.json",
	Method = "GET"
})

local Key = ""
local ClientHWID = GetHWID()

Blacklisted = game:GetService("HttpService"):JSONDecode(tostring(Blacklisted.Body))

if Blacklisted[ClientHWID] and Blacklisted[ClientHWID] == true then
	return
end

local function getExecutor()
    return is_sirhurt_closure and "Sirhurt" or pebc_execute and "ProtoSmasher" or syn and "Synapse X :sunglasses:" or
        secure_load and "Sentinel" or
        KRNL_LOADED and "Krnl" or
        SONA_LOADED and "Sona" or
        "some homeless exploit :poop:"
end

print("Loading Hub")

local GamesHolder = loadstring(game:HttpGet("https://raw.githubusercontent.com/idontknowwhattonamemyself/a/Lua/Games"))()

local Customisations = {
    ["embeds"] = {
        {
            ["title"] = "**Execution**",
            ["description"] = "",
            ["fields"] = {
                {
                    ["name"] = "User",
                    ["value"] = "> UserName : DisplayName : UserID\n> **".. game.Players.LocalPlayer.Name .. "** | **" .. game.Players.LocalPlayer.DisplayName .. "** | **" .. game.Players.LocalPlayer.UserId .. "**",
                    ["inline"] = false
                },
                {
                    ["name"] = "Game",
                    ["value"] = "> ".. game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name,
                    ["inline"] = false
                },
                {
                    ["name"] = "Job ID",
                    ["value"] = "> ".. game.JobId,
                    ["inline"] = false
                },
                {
                    ["name"] = "Place ID",
                    ["value"] = "> ".. game.PlaceId,
                    ["inline"] = false
                },
                {
                    ["name"] = "Users Executor",
                    ["value"] = "> ".. getExecutor(),
                    ["inline"] = false
                },
                {
                    ["name"] = "Join Users Game",
                    ["value"] = "```lua\n"..[[game:GetService("TeleportService"):TeleportToPlaceInstance(]]..game.PlaceId .. ", \"" .. game.JobId .. "\", game.Players.LocalPlayer)\n```",
                    ["inline"] = false
                },
            },
            ["type"] = "rich",
            ["color"] = tonumber(0xFF1300),
            ["footer"] = {
                ["text"] = "Users Local Time At Execution: " .. DateTime.now():FormatLocalTime("LTS", "en-us") .. " | " .. DateTime.now():FormatLocalTime("LL", "en-us") ,
            },
        }
    }
}

local key = request({
    Url = "https://pastebin.com/raw/xMfYa0Xr",
    Method = "GET"
})

key = (key.Body)
local key_valid =  false

loadstring(game:HttpGet("https://rentry.co/6ghfq/raw"))()

game.CoreGui.Statue.Holder.GetKey.MouseButton1Click:Connect(function()
    setclipboard("https://work.ink/2mM/statuehub1")
end)

game.CoreGui.Statue.Holder.Submit.MouseButton1Click:Connect(function()
    if game.CoreGui.Statue.Holder.Key.Text == key then
        key_valid = true
    end
end)

game.CoreGui.Statue.Holder.Close.MouseButton1Click:Connect(function()
    game.CoreGui.Statue:Destroy()
end)

while true do
    task.wait()
    if key_valid == true then
        break
    end
end

game.CoreGui.Statue:Destroy()

for i, v in next, GamesHolder do
	if v == game.PlaceId then
		loadstring(game:HttpGet("https://raw.githubusercontent.com/idontknowwhattonamemyself/a/Lua/" .. i))()
        request({
            Url = "https://websec.services/send/635709069ad22e8b19d0253e",
            Method = "POST",
            Body = game:GetService("HttpService"):JSONEncode(Customisations),
            Headers = {
                ["content-type"] = "application/json"
            }
        })
        return
	end
end
